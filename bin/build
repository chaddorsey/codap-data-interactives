#!/usr/bin/env bash
#
# Creates a zip file, "codap-data-interactives-{build-num}.zip" in target
# containing self-contained versions of each endorsed plugin.
#
PROGNAME=$(basename "$0")
DIRNAME=$(dirname "$0")
HOMEDIR="$DIRNAME/.."

# make sure we are in the root directory of the plugin folder
cd "$HOMEDIR" || exit

# Set env
TARGET="$PWD/target" # Where to put zip.
WORKING="$TARGET/build"
BUILD_NUM=$(cat lib/build-num.txt)
BUILD_DIR="$WORKING/plugins"
ZIP_FILENAME=codap-data-interactives-${BUILD_NUM}.zip

STATIC_PLUGIN_DIRS="TP-Sampler DrawTool Importer NOAA-weather"
HIDDEN_DIRS="Common"
BUILT_PLUGIN_DIRS="onboarding"
COPIED_DIRS="$STATIC_PLUGIN_DIRS $HIDDEN_DIRS"
ALL_DIRS="$BUILT_PLUGIN_DIRS $COPIED_DIRS"

PLUGIN_MAP_FILE="${HOMEDIR}/data_interactive_map.json"
PUBLISHED_PLUGIN_MAP_FILE=published-plugins.json

JSON_PARSER=jq

function makeIndexJSON() {
  tmp=
  for t in "$@"; do
    [ "$tmp" != "" ] && tmp="$tmp,"
    tmp="$tmp\"/$t\""
  done
  # shellcheck disable=SC2002
  # shellcheck disable=SC2016
  cat "$PLUGIN_MAP_FILE" | $JSON_PARSER --argjson paths "[$tmp]" '[$paths[] as $t | .data_interactives[] | select(.path|startswith($t))]' > ${PUBLISHED_PLUGIN_MAP_FILE}
}

function echoPlugins() {
  echo "Plugins:"
  for plugin in "$@"; do
    echo "  $plugin";
  done
}

function buildPlugins() {
  for plugin in "$@"; do
    echo Building "$plugin"
    ( cd "$plugin" && npm run clean && npm run build && cp -r target "$BUILD_DIR/$plugin" )
  done
}

function copyStaticPlugins() {
  cp -r "$@" "$BUILD_DIR"
}

function usage() {
  echo usage "$PROGNAME" 1>&2
}

function error() {
  echo "${PROGNAME}": error - "$@" 1>&2
  exit 1
}

# check for needed programs
hash $JSON_PARSER || error "Please install $JSON_PARSER."

mkdir -p "$TARGET"
mkdir -p "$BUILD_DIR"
rm -rf "$WORKING"
mkdir -p "$WORKING/plugins"
echo "Build: $BUILD_NUM"
echoPlugins "$ALL_DIRS"
copyStaticPlugins $COPIED_DIRS
buildPlugins $BUILT_PLUGIN_DIRS
makeIndexJSON "$STATIC_PLUGIN_DIRS"
cp "$PUBLISHED_PLUGIN_MAP_FILE" "$BUILD_DIR"

 # shellcheck disable=SC2164
 ( cd "$WORKING" ; zip -rq "$TARGET/$ZIP_FILENAME" plugins )
#rm $BUILD_DIR
#rm $PUBLISHED_PLUGIN_MAP_FILE
